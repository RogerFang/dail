<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dail.dao.PeopleMapper">
    <resultMap id="BaseResultMap" type="com.dail.model.People">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
        <result column="sequence" jdbcType="INTEGER" property="sequence"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="institution_id" jdbcType="INTEGER" property="institutionId"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="pure_desc" jdbcType="VARCHAR" property="pureDesc"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dail.model.People">
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, img_url, name, position, sequence, department_id, institution_id, email, pure_desc
  </sql>
    <sql id="Blob_Column_List">
    description
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from people
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from people
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dail.model.People">
    insert into people (id, img_url, name, 
      position, sequence, department_id, 
      institution_id, email, pure_desc, 
      description)
    values (#{id,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{institutionId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{pureDesc,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.dail.model.People" useGeneratedKeys="true" keyProperty="id">
        insert into people
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="sequence != null">
                sequence,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="institutionId != null">
                institution_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="pureDesc != null">
                pure_desc,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
            <if test="sequence != null">
                #{sequence,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="institutionId != null">
                #{institutionId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="pureDesc != null">
                #{pureDesc,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dail.model.People">
        update people
        <set>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
            <if test="sequence != null">
                sequence = #{sequence,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="institutionId != null">
                institution_id = #{institutionId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="pureDesc != null">
                pure_desc = #{pureDesc,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dail.model.People">
    update people
    set img_url = #{imgUrl,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      institution_id = #{institutionId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      pure_desc = #{pureDesc,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.dail.model.People">
    update people
    set img_url = #{imgUrl,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      institution_id = #{institutionId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      pure_desc = #{pureDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <resultMap id="ResultMapWithInfo" extends="BaseResultMap" type="com.dail.model.People">
        <association property="institution" column="institution_id" javaType="com.dail.model.Institution" select="queryIns"/>
        <association property="department" column="department_id" javaType="com.dail.model.Department" select="queryDep"/>
        <collection property="researchDirections" column="id" ofType="com.dail.model.ResearchDirection" select="com.dail.dao.ResearchDirectionMapper.selectByPeopleId"/>
    </resultMap>
    <resultMap id="ResultMapWithInfoUser" extends="ResultMapWithInfo" type="com.dail.model.People">
        <association property="sysUser" column="id" javaType="com.dail.model.SysUser" select="queryUser">
        </association>
    </resultMap>
    <resultMap id="ResultMapWithBLOBsInfo" extends="ResultMapWithBLOBs" type="com.dail.model.People">
        <association property="institution" column="institution_id" javaType="com.dail.model.Institution" select="queryIns"/>
        <association property="department" column="department_id" javaType="com.dail.model.Department" select="queryDep"/>
        <collection property="researchDirections" column="id" ofType="com.dail.model.ResearchDirection" select="com.dail.dao.ResearchDirectionMapper.selectByPeopleId"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBsDetail" extends="ResultMapWithBLOBsInfo" type="com.dail.model.People">
        <association property="sysUser" column="id" javaType="com.dail.model.SysUser" select="queryUser"/>
        <collection property="publications" column="id" ofType="com.dail.model.Publication" select="com.dail.dao.PublicationMapper.selectByPeopleId"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBsUser" extends="ResultMapWithBLOBsInfo" type="com.dail.model.People">
        <association property="sysUser" column="id" javaType="com.dail.model.SysUser" select="queryUser"/>
    </resultMap>
    <resultMap id="UserMap" type="com.dail.model.SysUser">
        <id property="id" column="user_id" />
        <result property="username" column="user_name" />
    </resultMap>
    <resultMap id="InsMap" type="com.dail.model.Institution">
        <id property="id" column="ins_id" />
        <result property="name" column="ins_name" />
    </resultMap>
    <resultMap id="DepMap" type="com.dail.model.Department">
        <id property="id" column="dep_id" />
        <result property="name" column="dep_name" />
    </resultMap>
    <select id="queryUser" resultMap="UserMap" parameterType="java.lang.Integer">
        select id as user_id,username as user_name from sys_user where people_id = #{id}
    </select>
    <select id="queryIns" resultMap="InsMap" parameterType="java.lang.Integer">
        select id as ins_id,name as ins_name from institution where id = #{id}
    </select>
    <select id="queryDep" resultMap="DepMap" parameterType="java.lang.Integer">
        select id as dep_id,name as dep_name from department where id = #{id}
    </select>
    <select id="selectAllBase" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from people order by sequence desc, name desc
    </select>
    <select id="selectAllBaseWithInfo" resultMap="ResultMapWithInfo">
        select
        <include refid="Base_Column_List" />
        from people order by sequence desc, name desc
    </select>
    <select id="selectAllBaseWithInfoUser" resultMap="ResultMapWithInfoUser">
        select
        <include refid="Base_Column_List" />
        from people order by sequence desc, name desc
    </select>
    <select id="selectAllBaseWithInfoUserLike" parameterType="java.lang.String" resultMap="ResultMapWithInfoUser">
        select
        <include refid="Base_Column_List" />
        from people
        <where>
            <if test="query != null">
                name like CONCAT('%',#{query},'%' )
            </if>
        </where>
        order by sequence desc, name desc
    </select>

    <select id="selectByIdWithDetail" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBsDetail">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from people
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByIdWithInfo" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBsInfo">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from people
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByIdWithInfoUser" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBsUser">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from people
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAllNotParticipants" parameterType="java.util.List" resultMap="BaseResultMap">
        select id, name
        from people
        <if test="list != null and list.size > 0">
            where
            id not in
            <foreach item="item" index="id" collection="list" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
</mapper>