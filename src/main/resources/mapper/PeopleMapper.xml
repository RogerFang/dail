<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dail.dao.PeopleMapper">
  <resultMap id="BaseResultMap" type="com.dail.model.People">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="institution_id" jdbcType="INTEGER" property="institutionId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dail.model.People">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, img_url, name, position, sequence, department_id, institution_id, email
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from people
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from people
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dail.model.People">
    insert into people (id, img_url, name, 
      position, sequence, department_id, 
      institution_id, email, description
      )
    values (#{id,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{institutionId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dail.model.People">
    insert into people
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="institutionId != null">
        institution_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="institutionId != null">
        #{institutionId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dail.model.People">
    update people
    <set>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="institutionId != null">
        institution_id = #{institutionId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dail.model.People">
    update people
    set img_url = #{imgUrl,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      institution_id = #{institutionId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dail.model.People">
    update people
    set img_url = #{imgUrl,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      institution_id = #{institutionId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>